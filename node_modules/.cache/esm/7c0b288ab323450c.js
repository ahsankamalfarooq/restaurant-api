let CustomErorHandler,JwtService;_b32‍.x([["default",()=>_b32‍.o]]);_b32‍.w("../services/CustomErrorHandler",[["default",["CustomErorHandler"],function(v){CustomErorHandler=v}]]);_b32‍.w("../services/JwtService",[["default",["JwtService"],function(v){JwtService=v}]]);





const auth = async (req,res,next) => {
 let authHeader = req.headers.authorization;

   // console.log(authHeader);
    if(!authHeader) {
        return next(CustomErorHandler.unAuthorized());
    }

    const token = authHeader.split(' ')[1] ;
    _b32‍.g.console.log(token)

    try {
        const {_id, role} = await JwtService.verify(token);

        const user = {
            _id,
            role
        }
        req.user = user
        next();



    } catch (err) {
        return next(CustomErorHandler.unAuthorized());
    }

}


_b32‍.d(auth);