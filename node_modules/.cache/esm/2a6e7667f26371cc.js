let express,registerController,loginController,userController,refreshController,productController,auth,admin;_f26‍.x([["default",()=>_f26‍.o]]);_f26‍.w("express",[["default",["express"],function(v){express=v}]]);_f26‍.w("../controllers",[["registerController",["registerController"],function(v){registerController=v}],["loginController",["loginController"],function(v){loginController=v}],["userController",["userController"],function(v){userController=v}],["refreshController",["refreshController"],function(v){refreshController=v}],["productController",["productController"],function(v){productController=v}]]);_f26‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);_f26‍.w("../middlewares/admin",[["default",["admin"],function(v){admin=v}]]);






const router = express.Router();




 
// auth
router.post('/register', registerController.register)
router.post('/login', loginController.login)
router.get('/me',auth, userController.me)
router.post('/refresh', refreshController.refresh)
router.post('/logout', auth, loginController.logout)

//products
router.post('/products',[auth, admin], productController.store)
router.put('/products/:id',[auth, admin], productController.update)
router.delete('/products/:id',[auth, admin], productController.delete)
router.get('/products', productController.index)
router.get('/products/:id', productController.show)



_f26‍.d(router);